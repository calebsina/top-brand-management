## Autogenerated by Scribe. DO NOT MODIFY.

name: Brands
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/brands
    metadata:
      groupName: Brands
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get top brands for a user's country

        Fetches the toplist of brands using the CF-IPCountry header. If no brands match the country,
        it returns those marked as "DEFAULT".
      description: ''
      authenticated: false
      custom: []
    headers:
      CF-IPCountry: US
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "brand_id": 1,
              "brand_name": "Nike",
              "brand_image": "https://example.com/nike.png",
              "rating": 5,
              "country_code": "US"
            }
          ]
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/brands
    metadata:
      groupName: Brands
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Create a new brand

        Adds a brand to the toplist with optional country scoping.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      brand_name:
        name: brand_name
        description: 'The name of the brand.'
        required: true
        example: Adidas
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand_image:
        name: brand_image
        description: 'A valid URL to the brand logo.'
        required: true
        example: 'https://example.com/adidas.png'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rating:
        name: rating
        description: 'Rating from 1 to 5.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_code:
        name: country_code
        description: 'Optional ISO-2 country code.'
        required: false
        example: US
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      brand_name: Adidas
      brand_image: 'https://example.com/adidas.png'
      rating: 4
      country_code: US
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/brands/{id}'
    metadata:
      groupName: Brands
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      brand_id:
        name: brand_id
        description: 'The ID of the brand.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      brand_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "brand_id": 2,
            "brand_name": "Puma",
            "brand_image": "https://example.com/puma.png",
            "rating": 4,
            "country_code": "US"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/brands/{id}'
    metadata:
      groupName: Brands
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update a brand

        Update brand info partially or fully.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      brand_id:
        name: brand_id
        description: 'The ID of the brand to update.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      brand_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      brand_name:
        name: brand_name
        description: 'The name of the brand.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      brand_image:
        name: brand_image
        description: 'A valid image URL.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rating:
        name: rating
        description: 'Rating from 1 to 5.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country_code:
        name: country_code
        description: 'Optional ISO-2 country code.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      brand_name: consequatur
      brand_image: consequatur
      rating: 17
      country_code: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/brands/{id}'
    metadata:
      groupName: Brands
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      brand_id:
        name: brand_id
        description: 'The ID of the brand to delete.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      brand_id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
